% selectROI Select regions of interest
%
% This method selects regions of interest for history generation. The
% standard call launches interactive selection, where curve regions can be
% defined by clicking on the spectrogram(s).
%    object=selectROI(object); % interactive selection on a new figure
%    object=selectROI(object,target); % interactive selection on target axes object(s)
% Subsequent method calls begin with previous ROI selections, allowing
% regions to modified as necessary.
%
% Manual region selection is also permitted.
%   object=selectROI(object,region);
% The input "region" must be a Curve object from the ROI package.  This
% object may be generated by itself or ported from another PDV object.
%    object=selectROI(object,previous.ROIselection);
%
% Automatic selection uses the primary spectrogram to generate a single
% region spanning the strongest feature.
%    object=selectROI(object,'-automatic');
% Optional name/value pairs control automatic region selection.
%    object=selectROI(object,'-automatic',name,value,...);
% Valid options include:
%    -'PowerThreshold' indicates the lowest power, relative to the
%    maximum, that will be analyzed.  The automatic region spans the first
%    and last time point where the power exceeds this threshold.  The
%    default value is 1%.
%    -'NumberPoints' controls the number of points in the automatic region.
%     These points are *not* uniformly spaced in time: they are sparse in
%     regions of constant velocity and dense during acceleration.  The
%     default value is 20.
% Automatic region selections are always displayed for user modification.
%
% See also PDV, generateSpectrogram
%

%
% created February 11, 2018 by Daniel Dolan (Sandia National Laboratories)
%
function object=selectROI(object,varargin)

% manage input
if (nargin < 2)
    [~,target]=view(object,'spectrogram');
    fig=ancestor(target(1),'figure');
    if isempty(object.ROIselection)
        region=SMASH.ROI.Curve('x');        
    else
        region=object.ROIselection;
    end
    region=manage(region,'Target',target);
    delete(fig);
elseif ishandle(varargin{1})
    fig=ancestor(varargin{1}(1),'figure');
    zoom(fig,'off');
    pan(fig,'off');
    datacursormode(fig,'off');
    if isempty(object.ROIselection)
        region=SMASH.ROI.Curve('x');        
    else
        region=object.ROIselection;
    end
    region=manage(region,'Target',varargin{1});
elseif isempty(varargin{1})
    object.ROIselection=[];
    object=changeStatus(object,'incomplete','ROI');
    object=changeStatus(object,'obsolete','History');    
elseif isa(varargin{1},'SMASH.ROI.Curve')
    region = varargin{1};
elseif strcmpi(varargin{1},'-automatic')
    assert(strcmpi(object.Status.Spectrogram,'complete'),...
        'ERROR: cannot guess ROI without spectrogram');
    assert(strcmpi(object.Status.Reference,'complete'),...
        'ERROR: cannot guess ROI without reference selection');
    region=guessROI(object,varargin{2:end});
    [~,target]=view(object,'spectrogram');
    fig=ancestor(target(1),'figure');
    region=select(region,target);
    delete(fig);
elseif strcmpi(varargin{1}, 'maxvelocityview')
    [~,target]=view(object,'spectrogram');
    yval = ylim(target);
    yval(2) = varargin{2};
    ylim(target, yval);
    fig=ancestor(target(1),'figure');
    if isempty(object.ROIselection)
        region=SMASH.ROI.Curve('x');        
    else
        region=object.ROIselection;
    end
    region=manage(region,'Target',target);
    delete(fig);
else
    error('ERROR: invalid region of interest');
end

% store results and update status
object.ROIselection=region;
object=changeStatus(object,'obsolete','History');
object=changeStatus(object,'complete','ROI');

end